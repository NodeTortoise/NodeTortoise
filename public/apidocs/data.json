{
    "project": {
        "name": "NodeTortoise",
        "description": "Proyecto Universitario basado en archivos Galapagos independientes, ejecutado sobre una plataforma NodeJS",
        "version": "1.0.0",
        "url": ""
    },
    "files": {
        "commons\\Helper.js": {
            "name": "commons\\Helper.js",
            "modules": {},
            "classes": {
                "Helper": 1,
                "formatDate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "commons\\_Commons.js": {
            "name": "commons\\_Commons.js",
            "modules": {
                "Commons": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "public\\js\\Model_List.js": {
            "name": "public\\js\\Model_List.js",
            "modules": {},
            "classes": {
                "Model_List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "public\\js\\Session_List.js": {
            "name": "public\\js\\Session_List.js",
            "modules": {},
            "classes": {
                "Session_List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "public\\js\\Simulation.js": {
            "name": "public\\js\\Simulation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "public\\js\\_Public.js": {
            "name": "public\\js\\_Public.js",
            "modules": {
                "Public": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\App.js": {
            "name": "server\\bl\\App.js",
            "modules": {},
            "classes": {
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Controller.js": {
            "name": "server\\bl\\Controller.js",
            "modules": {},
            "classes": {
                "Controller": 1,
                "Controller.model": 1,
                "Controller.session": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Model.js": {
            "name": "server\\bl\\Model.js",
            "modules": {},
            "classes": {
                "Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Session.js": {
            "name": "server\\bl\\Session.js",
            "modules": {},
            "classes": {
                "Session": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\SessionController.js": {
            "name": "server\\bl\\SessionController.js",
            "modules": {},
            "classes": {
                "SessionController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Simulation.js": {
            "name": "server\\bl\\Simulation.js",
            "modules": {},
            "classes": {
                "Simulation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\_Server-bl.js": {
            "name": "server\\bl\\_Server-bl.js",
            "modules": {
                "Server-bl": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\Entities.js": {
            "name": "server\\da\\Entities.js",
            "modules": {},
            "classes": {
                "Entities": 1,
                "Entities.model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\Sockets.js": {
            "name": "server\\da\\Sockets.js",
            "modules": {},
            "classes": {
                "Sockets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\_Server-bl.js": {
            "name": "server\\da\\_Server-bl.js",
            "modules": {
                "Server-da": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "server\\libs\\SQLite.js": {
            "name": "server\\libs\\SQLite.js",
            "modules": {},
            "classes": {
                "SQLite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\libs\\_Server-libs.js": {
            "name": "server\\libs\\_Server-libs.js",
            "modules": {
                "Server-libs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "server\\_Server.js": {
            "name": "server\\_Server.js",
            "modules": {
                "Server": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Commons": {
            "name": "Commons",
            "submodules": {},
            "elements": {},
            "classes": {
                "Helper": 1,
                "formatDate": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "commons\\Helper.js",
            "line": 319,
            "description": "Provee las clases utilizadas en el <i>front-end</i> y el <i>back-end</i> de \nla aplicación. Estas clases pueden ser procesadas tanto por el servidor, como \npor los navegadores web al cargar alguna página.",
            "itemtype": "main"
        },
        "Public": {
            "name": "Public",
            "submodules": {},
            "elements": {},
            "classes": {
                "Model_List": 1,
                "Session_List": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "public\\js\\Session_List.js",
            "line": 1,
            "description": "Provee las clases utilizadas en el <i>front-end</i> de la aplicación. Estas \nclases son procesadas por los navegadores web al cargar alguna página.",
            "itemtype": "main"
        },
        "Server": {
            "name": "Server",
            "submodules": {
                "Server-bl": 1,
                "Server-da": 1,
                "Server-libs": 1
            },
            "elements": {},
            "classes": {
                "Simulation": 1,
                "App": 1,
                "Controller": 1,
                "Controller.model": 1,
                "Controller.session": 1,
                "Model": 1,
                "Session": 1,
                "SessionController": 1,
                "Entities": 1,
                "Entities.model": 1,
                "Sockets": 1,
                "SQLite": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "server\\libs\\SQLite.js",
            "line": 3,
            "description": "Provee las clases utilizadas en el <i>back-end</i> de la aplicación. Estas \nclases son procesadas por el servidor de NodeJS.",
            "itemtype": "main"
        },
        "Server-bl": {
            "name": "Server-bl",
            "submodules": {},
            "elements": {},
            "classes": {
                "Simulation": 1,
                "App": 1,
                "Controller": 1,
                "Controller.model": 1,
                "Controller.session": 1,
                "Model": 1,
                "Session": 1,
                "SessionController": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\SessionController.js",
            "line": 3,
            "description": "Provee las clases relacionadas con la capa de <b>Lógica de Negocio</b>, \nutilizadas en el <i>back-end</i> de la aplicación.",
            "tag": "main",
            "itemtype": "main"
        },
        "Server-da": {
            "name": "Server-da",
            "submodules": {},
            "elements": {},
            "classes": {
                "Entities": 1,
                "Entities.model": 1,
                "Sockets": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Server",
            "namespace": "",
            "file": "server\\da\\Sockets.js",
            "line": 3,
            "description": "Provee las clases relacionadas con la capa de <b>Acceso a Datos</b>, \nutilizadas en el <i>back-end</i> de la aplicación.",
            "tag": "main",
            "itemtype": "main"
        },
        "Server-libs": {
            "name": "Server-libs",
            "submodules": {},
            "elements": {},
            "classes": {
                "SQLite": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Server",
            "namespace": "",
            "file": "server\\libs\\SQLite.js",
            "line": 3,
            "description": "Provee las clases relacionadas librearías utilizadas en el <i>back-end</i> \nde la aplicación.",
            "tag": "main",
            "itemtype": "main"
        }
    },
    "classes": {
        "Helper": {
            "name": "Helper",
            "shortname": "Helper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Commons",
            "file": "commons\\Helper.js",
            "line": 1,
            "description": "Funciones utilitarias."
        },
        "formatDate": {
            "name": "formatDate",
            "shortname": "formatDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Commons",
            "namespace": "",
            "file": "commons\\Helper.js",
            "line": 319,
            "description": "Da formato a una fecha."
        },
        "Model_List": {
            "name": "Model_List",
            "shortname": "Model_List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Public",
            "namespace": "",
            "file": "public\\js\\Model_List.js",
            "line": 1,
            "description": "Controla las acciones que se deben ejecutar en la página de Lista de Modelos",
            "is_constructor": 1
        },
        "Session_List": {
            "name": "Session_List",
            "shortname": "Session_List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Public",
            "namespace": "",
            "file": "public\\js\\Session_List.js",
            "line": 1,
            "description": "Controla las acciones que se deben ejecutar en la página de Lista de Modelos",
            "is_constructor": 1
        },
        "Simulation": {
            "name": "Simulation",
            "shortname": "Simulation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\Simulation.js",
            "line": 5,
            "description": "Maneja las acciones a ejecutar entre las simulaciones.",
            "is_constructor": 1,
            "submodule": "Server-bl"
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\App.js",
            "line": 3,
            "description": "Controlador principal de la aplicación en el lado del servidor. Se encarga de \nestablecer los parámetros de configuración, configurando el framework Express, \nlas rutas y el motor de plantillas (templates).",
            "submodule": "Server-bl",
            "is_constructor": 1
        },
        "Controller": {
            "name": "Controller",
            "shortname": "Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\Controller.js",
            "line": 36,
            "description": "Controla la capa negocio de la aplicación, haciendo la conexión entre la capa \nde datos y las vistas y aplicando la logica de negocio necesaria.",
            "submodule": "Server-bl"
        },
        "Controller.model": {
            "name": "Controller.model",
            "shortname": "Controller.model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "submodule": "Server-bl",
            "namespace": "",
            "file": "server\\bl\\Controller.js",
            "line": 61,
            "description": "Controla la capa de negocio que interactua con las acciones sobre los modelos."
        },
        "Controller.session": {
            "name": "Controller.session",
            "shortname": "Controller.session",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "submodule": "Server-bl",
            "namespace": "",
            "file": "server\\bl\\Controller.js",
            "line": 192,
            "description": "Controla la capa de negocio que interactua con las sesiones de simulaciones."
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\Model.js",
            "line": 3,
            "description": "Controla las acciones que se pueden ejecutar sobre un modelo.",
            "submodule": "Server-bl",
            "is_constructor": 1
        },
        "Session": {
            "name": "Session",
            "shortname": "Session",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\Session.js",
            "line": 3,
            "description": "Maneja una sesión individual de una simulación.",
            "submodule": "Server-bl",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ]
        },
        "SessionController": {
            "name": "SessionController",
            "shortname": "SessionController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\bl\\SessionController.js",
            "line": 3,
            "description": "Controla las sesiones de creadas por los usuarios para ejecutar las simulaciones.",
            "submodule": "Server-bl",
            "is_constructor": 1
        },
        "Entities": {
            "name": "Entities",
            "shortname": "Entities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\da\\Entities.js",
            "line": 9,
            "description": "Maneja la relación de las distintas entidades con la base de datos.",
            "submodule": "Server-da"
        },
        "Entities.model": {
            "name": "Entities.model",
            "shortname": "Entities.model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "submodule": "Server-da",
            "namespace": "",
            "file": "server\\da\\Entities.js",
            "line": 18,
            "description": "Maneja la relación de la entidad <i>model</i> con la base de datos."
        },
        "Sockets": {
            "name": "Sockets",
            "shortname": "Sockets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\da\\Sockets.js",
            "line": 3,
            "description": "Inicializa y configura los web sockets que se utilizan para el envío de la \ninformación en el ambiente de simulación de los modelos.",
            "submodule": "Server-da"
        },
        "SQLite": {
            "name": "SQLite",
            "shortname": "SQLite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "server\\libs\\SQLite.js",
            "line": 3,
            "description": "Ejecuta acciones sobre una base de SQLite",
            "submodule": "Server-libs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "Ruta al archivo de sqlite",
                    "type": "String"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "commons\\Helper.js",
            "line": 9,
            "description": "Genera un hash a partir de una cadena de caracteres (<i>string</i>).",
            "itemtype": "method",
            "name": "getHash",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cada de caracteres base para el hash",
                    "type": "String"
                },
                {
                    "name": "addTimestamp",
                    "description": "Indica si se concatena la hora actual a la cadena de caracteres",
                    "type": "Booolean"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 26,
            "description": "Indica si una variable tiene valor asignado.",
            "itemtype": "method",
            "name": "hasValue",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Variable a analizar",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 36,
            "description": "Genera un <i>spinner</i> sobre un elemento del HTML.",
            "itemtype": "method",
            "name": "spinner",
            "static": 1,
            "params": [
                {
                    "name": "elementSelector",
                    "description": "Selector del elemento HTML",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Opciones para el <i>spinner</i>",
                    "type": "Object"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 91,
            "description": "Ejecuta una función a partir del nombre",
            "itemtype": "method",
            "name": "executeFunctionByName",
            "static": 1,
            "params": [
                {
                    "name": "functionName",
                    "description": "Nombre de la función",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "Contexto(s) de la función",
                    "type": "Array|String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 108,
            "description": "Obtiene el valor almacenado en una variable o un valor por defecto si esta no\nestá asignada o es nula.",
            "itemtype": "method",
            "name": "get",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Variable a analizar",
                    "type": "String"
                },
                {
                    "name": "defaultValue",
                    "description": "Valor por defecto",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 120,
            "description": "Obtiene la versión de navegador de Internet utilizada.",
            "itemtype": "method",
            "name": "getBrowser",
            "static": 1,
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 141,
            "description": "Asigna la ejecución de una función, cual se termina la carga de una página.",
            "itemtype": "method",
            "name": "onload",
            "static": 1,
            "params": [
                {
                    "name": "functionName",
                    "description": "Función a asignar",
                    "type": "Function"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 164,
            "description": "Busca un fragmento en una cadena de caracteres y reemplaza todas las\ncoincidencias.",
            "itemtype": "method",
            "name": "replaceAll",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cadena de caracteres donde se buscarán las coincidencias",
                    "type": "String"
                },
                {
                    "name": "find",
                    "description": "Cadena de caracteres a buscar",
                    "type": "String"
                },
                {
                    "name": "replace",
                    "description": "Cadena de caracteres que reemplazará",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 177,
            "description": "Agrega el caracter de escape, a los caracteres especiales en una cadena.",
            "itemtype": "method",
            "name": "escapeRegExp",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "La cadena de caracteres",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 187,
            "description": "Formate un nombre de archivo, eliminando los caracteres especiales,\nconvirtiéndolo a minúsculas y remplazando los espaciones por guiones bajos.\nconvirtiéndole.",
            "itemtype": "method",
            "name": "removeSpecialChars",
            "static": 1,
            "params": [
                {
                    "name": "fileName",
                    "description": "Nombre del archivo",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 199,
            "description": "Indica si una variable tiene valor asignado.",
            "itemtype": "method",
            "name": "getRandomNumber",
            "static": 1,
            "params": [
                {
                    "name": "min",
                    "description": "Valor mínimo",
                    "type": "Integer"
                },
                {
                    "name": "max",
                    "description": "Valor máximo",
                    "type": "Integer"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 210,
            "description": "Obtiene un parámetro <i>GET</i> de una URL.",
            "itemtype": "method",
            "name": "getURLParameter",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Nombre del parámetro",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "La URL",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 227,
            "description": "Obtiene la última sección de un URL.",
            "itemtype": "method",
            "name": "getLastURLPiece",
            "static": 1,
            "params": [
                {
                    "name": "url",
                    "description": "La URL",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 240,
            "description": "Elimina caracteres al final de una cadena de caracteres.",
            "itemtype": "method",
            "name": "trimRight",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cadena de caracteres a la cual se le aplicara la función",
                    "type": "String"
                },
                {
                    "name": "String",
                    "description": "string Cadena de caracteres con los caracteres a reemplazar.\nPor defecto se reemplazan los espacios.",
                    "optional": true
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 255,
            "description": "Elimina caracteres al inicio de una cadena de caracteres.",
            "itemtype": "method",
            "name": "trimLeft",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cadena de caracteres a la cual se le aplicara la función",
                    "type": "String"
                },
                {
                    "name": "String",
                    "description": "string Cadena de caracteres con los caracteres a reemplazar.\nPor defecto se reemplazan los espacios.",
                    "optional": true
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 270,
            "description": "Convierte una cadena de caracteres a entidades HTML",
            "itemtype": "method",
            "name": "toHTMLEntities",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cadena de caracteres a la cual se le aplicara la función",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "commons\\Helper.js",
            "line": 282,
            "description": "Crea una cadena de caracteres desde una entidad HTML",
            "itemtype": "method",
            "name": "fromHTMLEntities",
            "static": 1,
            "params": [
                {
                    "name": "string",
                    "description": "Cadena de caracteres a la cual se le aplicara la función",
                    "type": "String"
                }
            ],
            "class": "Helper",
            "module": "Commons"
        },
        {
            "file": "public\\js\\Model_List.js",
            "line": 9,
            "description": "Ejecuta las acciones de configuración necesarias",
            "itemtype": "method",
            "name": "init",
            "class": "Model_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Model_List.js",
            "line": 29,
            "description": "Inicializa la tabla que contiene la lista de modelos",
            "itemtype": "method",
            "name": "initModelsTable",
            "class": "Model_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Model_List.js",
            "line": 51,
            "description": "Configura la acción de borrar modelo",
            "itemtype": "method",
            "name": "deleteModel",
            "return": {
                "description": ""
            },
            "class": "Model_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Model_List.js",
            "line": 83,
            "description": "Crea e inicializa el objeto Model_List",
            "itemtype": "method",
            "name": "init",
            "class": "Model_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Session_List.js",
            "line": 12,
            "description": "Ejecuta las acciones de configuración necesarias",
            "itemtype": "method",
            "name": "init",
            "class": "Session_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Session_List.js",
            "line": 49,
            "description": "Recarga las tablas de lista de sesiones y lista de modelos",
            "itemtype": "method",
            "name": "reloadSessionsData",
            "class": "Session_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Session_List.js",
            "line": 78,
            "description": "Inicializa la tabla que contiene la lista de sesiones",
            "itemtype": "method",
            "name": "initModelsTable",
            "class": "Session_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Session_List.js",
            "line": 105,
            "description": "Crea e inicializa el objeto Session_List",
            "itemtype": "method",
            "name": "init",
            "class": "Session_List",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 38,
            "description": "Inicializa la clase, realizando las configuraciones necesarias.",
            "itemtype": "method",
            "name": "init",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 66,
            "description": "Realiza la conexion del cliente con el servidor por medio de <i>web sockets</i>.",
            "itemtype": "method",
            "name": "connect",
            "return": {
                "description": ""
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 80,
            "description": "Este metodo sobre-escribe el metodo <b>AgentStreamController.prototype.applyUpdate</b>\ndel codigo original de Tortoise. Se encarga de controlar la actualizacion\nde la simulacion (a nivel grafico) y de los valores de los <i>outputs</i>.\nEn el caso del cliente maestro, se envia un mensaje al servidor para que\nlos clientes realicen la actualizacion y finalmente se ejecuta el codigo\noriginal de actualizacion. En el caso los clientes que no son maestros,\nse ignora cualquier proceso. En caso de que aun no se hara realizado\nla conexion con el <i>socket</i>, se ejecuta el codigo original de\nactualizacion, en ambos casos.",
            "itemtype": "method",
            "name": "applyUpdate",
            "params": [
                {
                    "name": "agentStreamController",
                    "description": "El objeto AgentStreamController del modelo",
                    "type": "Object"
                },
                {
                    "name": "modelUpdate",
                    "description": "El objeto que contiene las intrucciones de actualizacion",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "El resultado del proceso de actualiacion. Este resultado proviene de\nla logica del codigo de Tortoise",
                "type": "Object"
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 114,
            "description": "Codigo ejecutado por los clientes no maestros al recibir un mensaje de\nactualizacion del modelo. Ejecuta las actualizaciones del modelo, haciendo\nla llamada al codigo de actualizacion original de <b>Tortoise</b> y\nllevando a cabo la actualizacion de los <i>outputs</i>.",
            "itemtype": "method",
            "name": "applyUpdate_",
            "params": [
                {
                    "name": "modelUpdate",
                    "description": "El objeto que contiene las intrucciones de actualizacion",
                    "type": "Object"
                },
                {
                    "name": "outputs",
                    "description": "Objeto que contiene las actualizaciones a ejecutar sobre los <i>outputs</i>",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 131,
            "description": "Establece el valor de la velocidad de la simulacion.",
            "itemtype": "method",
            "name": "updateSpeed_",
            "params": [
                {
                    "name": "value",
                    "description": "Valor de la velocidad",
                    "type": "Integer"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 140,
            "description": "Dtermina si un widget es de tipo comando.",
            "itemtype": "method",
            "name": "isCommandWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "El widget",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Verdadero o Falso",
                "type": "Boolean"
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 150,
            "description": "Inicializa los widgets del modelo, para:\n1. Obtener los widget de tipo comando para sobre-escribir su funcionalidad\n2. Obtener y guardar los widget de tipo control para posteriormente\nsobre-escribir su funcionalidad.",
            "itemtype": "method",
            "name": "initWidgets",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 178,
            "description": "Extrae de un <i>widget</i> de tipo comando la informacion necesaria para\nsu posterior procesamiento.",
            "itemtype": "method",
            "name": "parseCommandWidget",
            "params": [
                {
                    "name": "widgetData",
                    "description": "Los datos del <i>widget</i>",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "result",
                "type": "Object"
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 200,
            "description": "Sobre-escribe la funcionalidad de un comando",
            "itemtype": "method",
            "name": "overwriteCommand",
            "params": [
                {
                    "name": "commandData",
                    "description": "Los datos del comando",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 221,
            "description": "Agrega funcionalidad a los controles de la simulacion.",
            "itemtype": "method",
            "name": "overwriteControls",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 246,
            "description": "Envia al servidor al valor de un control.",
            "itemtype": "method",
            "name": "sendInputValue",
            "params": [
                {
                    "name": "name",
                    "description": "El nombre del control",
                    "type": "String"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 258,
            "description": "Establece el valor de un control.",
            "itemtype": "method",
            "name": "sendInputValue",
            "params": [
                {
                    "name": "name",
                    "description": "El nombre del control",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "El valor del control",
                    "type": "String"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 280,
            "description": "Deshabilita los botones",
            "itemtype": "method",
            "name": "disableButtons",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 288,
            "description": "Habilita los botones",
            "itemtype": "method",
            "name": "enableButtons",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 296,
            "description": "Deshabilita los controles de entrada",
            "itemtype": "method",
            "name": "disableInputs",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 304,
            "description": "Habilita los controles de entrada",
            "itemtype": "method",
            "name": "enableInputs",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 312,
            "description": "Inicializa",
            "itemtype": "method",
            "name": "initNoMasterConnected",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 321,
            "description": "Envia un mensaje de ejecutar accion al servidor por medio de web sockets,\npara que sea enviada a los demas clientes en la sesion.",
            "itemtype": "method",
            "name": "sendAction",
            "params": [
                {
                    "name": "action",
                    "description": "La accion a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 335,
            "description": "Ejecuta la accion de inicializacion de la sesion se simulacion",
            "itemtype": "method",
            "name": "start",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 349,
            "description": "Ejecuta la accion de finalizacion de la sesion se simulacion",
            "itemtype": "method",
            "name": "end",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 362,
            "description": "Recibe del servidor la respuesta al conectarse a los web sockets",
            "itemtype": "method",
            "name": "overwritedCommands.connect_Response",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros recibidos",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 376,
            "description": "Recibe del servidor la accion de actualizar usuarios",
            "itemtype": "method",
            "name": "overwritedCommands.updateUsers",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 384,
            "description": "Recibe del servidor la accion de ejecutar comando",
            "itemtype": "method",
            "name": "overwritedCommands.executeCommand",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 395,
            "description": "Recibe del servidor la accion de establecer el valor de un control",
            "itemtype": "method",
            "name": "overwritedCommands.setControl",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 403,
            "description": "Recibe del servidor la accion de actualizar velocidad de la simulacion",
            "itemtype": "method",
            "name": "overwritedCommands.updateSpeed",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 411,
            "description": "Recibe del servidor la accion de aplicar actualizacion de la simulacion",
            "itemtype": "method",
            "name": "overwritedCommands.applyUpdate",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 420,
            "description": "Recibe del servidor la accion de iniciar sesion de simulacion",
            "itemtype": "method",
            "name": "overwritedCommands.start",
            "params": [
                {
                    "name": "enabledControls",
                    "description": "Indica si los controles estan habilitados o no",
                    "type": "Boolean"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 429,
            "description": "Recibe del servidor la accion de finalizar sesion de simulacion",
            "itemtype": "method",
            "name": "overwritedCommands.end",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 436,
            "description": "Recibe del servidor la accion de obtener mensaje",
            "itemtype": "method",
            "name": "overwritedCommands.getMessage",
            "params": [
                {
                    "name": "params",
                    "description": "Los parametros de la accion",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 446,
            "description": "Inicializa las acciones que se pueden recibir del servidor por medio de\nweb sockets",
            "itemtype": "method",
            "name": "initSockets",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 467,
            "description": "Crea un objeto Simulation",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "modelObj El objeto Simulation"
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 479,
            "description": "Sobre-escribe algunos de los metodos de Tortoise, necesarios antes de que\nse inicialice Tortoise",
            "itemtype": "method",
            "name": "setupObject",
            "params": [
                {
                    "name": "modelObj",
                    "description": "Objeto Simulation",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 498,
            "description": "Basado en el patron <i>Singleton</i>, retorna una instancia del objeto Simulation",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "La instancia de Simulation",
                "type": "Simulation"
            },
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 511,
            "description": "Formatea la interfaz de grafica en la pagina de simulacion, para que cuente\ncon el menu y las demas opciones de la interfaz grafica del resto de la\naplicacion.",
            "itemtype": "method",
            "name": "formatUI",
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "public\\js\\Simulation.js",
            "line": 537,
            "description": "Formatea la seccion de Usuarios de la sesion en interfaz de grafica.",
            "itemtype": "method",
            "name": "users",
            "params": [
                {
                    "name": "users",
                    "description": "La lista de usuario",
                    "type": "Array"
                }
            ],
            "class": "Simulation",
            "module": "Public"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 16,
            "description": "Inicializa el proceso de definición de los parámetros de configuración \nde la aplicación.",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "server",
                    "description": "",
                    "type": "http.Server"
                }
            ],
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 30,
            "description": "Establece los parámetros de configuración de Express y el motor de \nplantillas Swig y otros (logger, cookieParser, etc).",
            "itemtype": "method",
            "name": "setupConfig",
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 70,
            "description": "Establece los parámetros de configuración de las rutas accesibles por \nmedio del protocolo HTTP.",
            "itemtype": "method",
            "name": "setupRoutes",
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 110,
            "description": "Constructor de la clase.",
            "itemtype": "method",
            "name": "__construct",
            "access": "private",
            "tagname": "",
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 122,
            "description": "Returna la instancia de Express utilizada.",
            "itemtype": "method",
            "name": "getExpress",
            "return": {
                "description": "app Instancia de express",
                "type": "Express"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 135,
            "description": "Retorn la ruta desde el directorio raíz de la aplicación basado en la ruta \nrecibida.",
            "itemtype": "method",
            "name": "getRootPath",
            "static": 1,
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta a la raíz de la aplicación",
                "type": "String"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 148,
            "description": "Retorn la ruta desde el directorio de los archivos del servidor de la \naplicación basado en la ruta recibida.",
            "itemtype": "method",
            "name": "getPath",
            "static": 1,
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al directorio de los archivos del servidor de la aplicación",
                "type": "String"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 161,
            "description": "Incluye el cídigo de un archivo dentro de la aplicación.",
            "itemtype": "method",
            "name": "include",
            "static": 1,
            "params": [
                {
                    "name": "file",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 172,
            "description": "Realiza el require de cualquiera de los módulos ubicados dentro del directorio\nde los archivos del servidor de la aplicación.",
            "itemtype": "method",
            "name": "require",
            "static": 1,
            "params": [
                {
                    "name": "module",
                    "description": "Ruta relativa del modulo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El <i>requite</i> del modulo",
                "type": "Mixed"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 184,
            "description": "Imprime en consola un mensaje de depuración, personalizado para la aplicación.\nLa impresión del mensaje es condicionada por el valor de la variable global  \n<i>DEBUG_MODE<i> en el archivo de configuración de la aplicación y el valor del\nparámetro <i>mode</i> recibido",
            "itemtype": "method",
            "name": "debug",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "El mensaje a imprimir en consola",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "El usuario que está enviando el mensaje (cuando se está en modo simulación)",
                    "type": "String"
                },
                {
                    "name": "session",
                    "description": "La sesion del usuario que está enviando el mensaje (cuando se está en modo simulación)",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "El modo de debug a aplicar al mensaje",
                    "type": "String"
                }
            ],
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 209,
            "description": "Retorna la instancia del objeto Express utilizado",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "Instancia de express",
                "type": "Express"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 222,
            "description": "Determina si el usuario es master comparando con la contraseña enviada por \nparámetro con la contraseña del usuario maestro.",
            "itemtype": "method",
            "name": "isUserMaster",
            "static": 1,
            "params": [
                {
                    "name": "userPassword",
                    "description": "La contraseña del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El resultado de la comparación de las contraseñas",
                "type": "Boolean"
            },
            "class": "App",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 3,
            "description": "Establece un error de sistema",
            "itemtype": "method",
            "name": "responseOnErrorHTML",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                },
                {
                    "name": "status",
                    "description": "El status del error",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "500"
                }
            ],
            "class": "Controller",
            "module": "Server"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 20,
            "description": "Establece un error de sistema para un servicio web",
            "itemtype": "method",
            "name": "responseOnErrorJson",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas.",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                },
                {
                    "name": "status",
                    "description": "El status del error",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "400"
                }
            ],
            "class": "Controller",
            "module": "Server"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 46,
            "description": "Despliega una página genérica con un mensaje.",
            "itemtype": "method",
            "name": "message",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "title",
                    "description": "El titulo de la pagina",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "El mensaje",
                    "type": "String"
                }
            ],
            "class": "Controller",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 70,
            "description": "Controla la página de carga de modelos.",
            "itemtype": "method",
            "name": "upload",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución de búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 84,
            "description": "Controla la página de modelo subido exitosamente.",
            "itemtype": "method",
            "name": "upload.success",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución de búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 98,
            "description": "Controla la página de error al subir un modelo.",
            "itemtype": "method",
            "name": "upload.error",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 112,
            "description": "Controla la subida de un archivo de modelo.",
            "itemtype": "method",
            "name": "onUpload",
            "static": 1,
            "params": [
                {
                    "name": "originalFile",
                    "description": "Archivo original del modelo subido.",
                    "type": "String"
                },
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 128,
            "description": "Controla la página de listado de modelos.",
            "itemtype": "method",
            "name": "list",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 137,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onSuccess",
            "params": [
                {
                    "name": "modelsList",
                    "description": "Listado de modelos",
                    "type": "Array"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 148,
            "description": "Función que ejecuta después si hay un error al obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 160,
            "description": "Controla el borrado de un modelo.",
            "itemtype": "method",
            "name": "delete",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 169,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "delete.onSuccess",
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 176,
            "description": "Función que ejecuta después si hay un error al eliminar el modelo.",
            "itemtype": "event",
            "name": "delete.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 201,
            "description": "Controla la página de listado de sesiones de simulación.",
            "itemtype": "method",
            "name": "list",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 210,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.afterGetModelsList",
            "params": [
                {
                    "name": "modelsList",
                    "description": "La lista de modelos",
                    "type": "Array"
                }
            ],
            "class": "Controller.session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 235,
            "description": "Función para obtener la URL a un modelo.",
            "itemtype": "event",
            "name": "list.getModelURL",
            "params": [
                {
                    "name": "modelFilename",
                    "description": "El nombre de archivo del modelo sin extensión",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "El nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La URL al modelo",
                "type": "String"
            },
            "class": "Controller.session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 247,
            "description": "Función para obtener la URL a una sesión.",
            "itemtype": "event",
            "name": "list.getSessionURL",
            "params": [
                {
                    "name": "sessionURL",
                    "description": "El URL de la sesión",
                    "type": "String"
                },
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La URL de la sesión correctamente formateada",
                "type": "String"
            },
            "class": "Controller.session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 261,
            "description": "Función que ejecuta después si hay un error al obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 14,
            "description": "Agregar un modelo al sistema.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "originalFile",
                    "description": "Ruta al archivo original subido",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Texto descriptivo del modelo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "success Resultado de la adición del modelo.",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 44,
            "description": "Obtiene un modelo por ID de modelo.",
            "itemtype": "method",
            "name": "getByID",
            "params": [
                {
                    "name": "idModel",
                    "description": "ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 55,
            "description": "Obtiene un modelo por nombre de archivo.",
            "itemtype": "method",
            "name": "getByFilename",
            "params": [
                {
                    "name": "filename",
                    "description": "Nombre del archivo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 67,
            "description": "Retorna la lista de modelos disponibles en el sistema",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se ha recuperado la lista de modelos del sistema",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función e ejecutar si hay un error al recuperar la lista de modelos del sistema",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 77,
            "description": "Elimina un modelo del sistema",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "idModel",
                    "description": "El ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "filename",
                    "description": "Nombre de archivo del modelo (sin la ruta)",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el modelo sea eliminado correctamente del sistema",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función e ejecutar si hay un error al eliminar un modelo del sistema",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 86,
            "description": "Función a ejecutar cuando el modelo sea eliminado correctamente de la base de datos",
            "itemtype": "method",
            "name": "afterDeleteFromDB",
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 101,
            "description": "Retorna la ruta al archivo HTML de un modelo.",
            "itemtype": "method",
            "name": "getHTMLFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fileName",
                    "description": "Nombre del archivo de modelo a recuperar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al archivo HTML de un modelo",
                "type": "String"
            },
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 112,
            "description": "Retorna la ruta al archivo JavaScript de un modelo.",
            "itemtype": "method",
            "name": "getJSFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fileName",
                    "description": "Nombre del archivo de modelo a recuperar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al archivo JavaScript de un modelo",
                "type": "String"
            },
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 123,
            "description": "Intenta eliminar un archivo del sistema de archivo, si falla, envía un mensaje de depuración a la aplicación.",
            "itemtype": "method",
            "name": "tryDeleteFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta del archivo",
                    "type": "String"
                },
                {
                    "name": "fileStrID",
                    "description": "Identificador del archivo a ser mostrado en el mensaje de depuración.",
                    "type": "String"
                },
                {
                    "name": "fs",
                    "description": "Objeto que controla el sistema de archivos",
                    "type": "Fs"
                }
            ],
            "return": {
                "description": "Resultado de eliminar el archivo",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 144,
            "description": "Procese un modelo exportado de Galapagos, para convertirlo al formato necesario para que funcione en NodeTortoise.",
            "itemtype": "method",
            "name": "parse",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "originalFilePath",
                    "description": "Ruta del archivo original, subido al sistema",
                    "type": "String"
                },
                {
                    "name": "htmlNewFilePath",
                    "description": "Ruta donde se debe guardar el archivo HTML del modelo",
                    "type": "String"
                },
                {
                    "name": "jsNewFilePath",
                    "description": "Ruta donde se debe guardar el archivo JavaScript del modelo",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Nombre del archivo del modelo",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "fs",
                    "description": "Objeto que controla el sistema de archivos",
                    "type": "Fs"
                }
            ],
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 184,
            "description": "Basado en el patrón <i>Singleton</i>, retorna una instancia del objeto Model",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "La instancia de Model",
                "type": "Model"
            },
            "class": "Model",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 22,
            "description": "Realiza el proceso de inicialización de variables necesarias por el objeto.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "modelFile",
                    "description": "El archivo del modelo",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "El nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "masterName",
                    "description": "El nombre del usuario maestro",
                    "type": "String"
                }
            ],
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 37,
            "description": "Agrega un usuario a la sesión.",
            "itemtype": "method",
            "name": "addUser",
            "params": [
                {
                    "name": "username",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "masterPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "enabledControls",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Un objecto JavaScript estandar con la información sobre la sesión.",
                "type": "Object"
            },
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 68,
            "description": "Elimina un usuario de una sesión de simulación.",
            "itemtype": "method",
            "name": "removeUser",
            "params": [
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "El token de sesión del usuario",
                    "type": "String"
                }
            ],
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 85,
            "description": "Retorna el token del usuario maestro.",
            "itemtype": "method",
            "name": "getMasterToken",
            "return": {
                "description": "El token del usuario maestro",
                "type": "String"
            },
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 94,
            "description": "Actualiza la fecha de ultima actividad.",
            "itemtype": "method",
            "name": "updateLastActivityDate",
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 102,
            "description": "Retorna la información de la sesión.",
            "itemtype": "method",
            "name": "getSessionInfo",
            "return": {
                "description": "Objeto estándar de NodeJS que contiene la información \nde la sesión",
                "type": "Object"
            },
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 112,
            "description": "Retorna la cantidad de usuarios en una sesión.",
            "itemtype": "method",
            "name": "getUsersQuantity",
            "return": {
                "description": "La cantidad de usuarios en la sesión",
                "type": "Integer"
            },
            "class": "Session",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 15,
            "description": "Realiza el proceso de inicialización de variables necesarias por el objeto.",
            "itemtype": "method",
            "name": "init",
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 24,
            "description": "Añade un usuario a una sesión de simulación. Si la sessión no existe, crea una nueva.",
            "itemtype": "method",
            "name": "joinSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "modelFile",
                    "description": "El archivo del modelo de la simulación que ejecutará la sesión",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "El nombre del modelo de la simulación que ejecutará la sesión",
                    "type": "String"
                },
                {
                    "name": "enabledControls",
                    "description": "Determinar si la sesión habilita o no los controles a otros usuarios distintos del maestro. Parámetro obligatorio solo para el usuario maestro.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Objecto JavaScript estandar con información del usuario en la sesión.",
                "type": "Object"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 44,
            "description": "Elimina un usuario de una sesión de simulación.",
            "itemtype": "method",
            "name": "leaveSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "El token de sesión del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "diedSession Indica si la sesión murió, porque el que abandonó fue el usuario maestro."
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 65,
            "description": "Devuelve el modelo que se está utilizando en una sesión.",
            "itemtype": "method",
            "name": "getSessionModel",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El nombre del modelo utilizado en la sesión",
                "type": "String"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 75,
            "description": "Retorna la lista de las sesiones de simulación activas.",
            "itemtype": "method",
            "name": "getSessionList",
            "return": {
                "description": "La lista de sesiones",
                "type": "Array"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 84,
            "description": "Retorna una sesión, basado en el nombre recibido como parámetro.",
            "itemtype": "method",
            "name": "getSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La sesión",
                "type": "Session"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 94,
            "description": "Retorna la cantidad de usuarios en una sesión, basado en el nombre recibido como parámetro.",
            "itemtype": "method",
            "name": "getSessionUsersQuantity",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La cantidad de usuarios en la sesión",
                "type": "Integer"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 104,
            "description": "Actualiza la fecha de ultima actividad.",
            "itemtype": "method",
            "name": "updateActivityDate",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 115,
            "description": "Revisa la actividad de las sesiones. Si alguna tiene más de cierta \ncantidad de minutos sin actividad.",
            "itemtype": "method",
            "name": "checkSessionsActivity",
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 131,
            "description": "Constructor de la clase",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "__construct",
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 144,
            "description": "Basado en el patrón <i>Singleton</i>, retorna una instancia del objeto SessionController",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "",
                "type": "SessionController"
            },
            "class": "SessionController",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 14,
            "description": "Conecta una nueva instancia a una sesión de simulacón",
            "itemtype": "method",
            "name": "connect",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 40,
            "description": "Desconecta al dueño dle socket actual de una sesión.",
            "itemtype": "method",
            "name": "disconnect",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 61,
            "description": "Envía un mensaje de <b>Ejecutar Comando</b>, para que los \nclientes ejecuten un comando, basado en los parámetros enviados.",
            "itemtype": "method",
            "name": "executeCommand",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 74,
            "description": "Envía un mensaje de <b>Establecer valor de variable global</b>, para que los \nclientes establezcan un nuevo valor de variable global, basado en los \nparámetros enviados.",
            "itemtype": "method",
            "name": "setControl",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 93,
            "description": "Envía un mensaje de <b>Actualizar Velocidad</b>, para que los clientes \nejecuten una actualización de la velocidad de la  simulación, \nbasado en los parámetros enviados.",
            "itemtype": "method",
            "name": "updateSpeed",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 112,
            "description": "Envía un mensaje de <b>Aplicar actualización</b>, para que los clientes \nejecuten una actualización de la simulación, basado en los parámetros enviados.",
            "itemtype": "method",
            "name": "applyUpdate",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\bl\\Simulation.js",
            "line": 124,
            "description": "Envía un mensaje de <b>Enviar Mensaje</b>",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Simulation",
            "module": "Server",
            "submodule": "Server-bl"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 26,
            "description": "Inserta un modelo en base de datos.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "filename",
                    "description": "Nombre del archivo del modelo sin extensión",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Descripción del modelo",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 39,
            "description": "Obtiene un modelo por ID de modelo.",
            "itemtype": "method",
            "name": "getByID",
            "params": [
                {
                    "name": "idModel",
                    "description": "ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 50,
            "description": "Obtiene un modelo por nombre de archivo.",
            "itemtype": "method",
            "name": "getByFilename",
            "params": [
                {
                    "name": "filename",
                    "description": "Nombre del archivo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 61,
            "description": "Obtiene la lista de modelos en base de datos.",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene la lista de modelos",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 71,
            "description": "Elimina un modelo de base de datos.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "idModel",
                    "description": "ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se elimina el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 87,
            "description": "Basado en el patrón <i>Singleton</i>, retorna una instancia del objeto Entities.model",
            "itemtype": "method",
            "name": "getInstance",
            "return": {
                "description": "",
                "type": "Entities.model"
            },
            "class": "Entities.model",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 13,
            "description": "Instancia de sockets.io",
            "itemtype": "attribute",
            "name": "io",
            "type": "{sockets.io}",
            "static": 1,
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 21,
            "description": "Envía a los demás la indicación de que se ejecute una acción.",
            "itemtype": "method",
            "name": "sendAction",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión de simulación a la cual se va a enviar el mensaje",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 40,
            "description": "Alias de Sockets.setServerActions",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 49,
            "description": "Configura las acciones que se pueden ejecutar sobre el socket actual",
            "itemtype": "method",
            "name": "setServerActions",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 70,
            "description": "Envía un mensaje al dueño del socket actual",
            "itemtype": "method",
            "name": "sendToMe",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 83,
            "description": "Envía un mensaje de acción a los otros usuarios dentro de la sesión del dueño del socket actual.",
            "itemtype": "method",
            "name": "sendToOthers",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 97,
            "description": "Envía un mensaje de acción a todos los usuarios dentro la sesión del dueño del socket actual.",
            "itemtype": "method",
            "name": "sendToAll",
            "static": 1,
            "params": [
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 110,
            "description": "Configura la funcionalidad de los Sockets",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "params": [
                {
                    "name": "server",
                    "description": "Instancia del servidot HTTP",
                    "type": "http.Server"
                }
            ],
            "class": "Sockets",
            "module": "Server",
            "submodule": "Server-da"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 17,
            "description": "Description",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "fields",
                    "description": "Las columnas a insertar",
                    "type": "String"
                },
                {
                    "name": "values",
                    "description": "Los valores a insertar",
                    "type": "Array"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 43,
            "description": "Selecciona los registros de una tabla, basado en los filtros obtenidos",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "filters",
                    "description": "Los filtros de la consulta (<i>where</i>)",
                    "type": "Array"
                },
                {
                    "name": "String ",
                    "description": "fields Las columnas a seleccionar",
                    "optional": true,
                    "optdefault": " '*'"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 67,
            "description": "Selecciona todos los registros de una tabla.",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "String ",
                    "description": "fields Las columnas a seleccionar",
                    "optional": true,
                    "optdefault": " '*'"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 89,
            "description": "Elimina uno o más registros de una tabla.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "filters",
                    "description": "Los filtros de la consulta (<i>where</i>)",
                    "type": "Array"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 115,
            "description": "Ejecuta el <i>callback</i> indicado después de realizar una tarea de base \nde datos, ya sea este de procesos exitoso o de error.",
            "itemtype": "method",
            "name": "onCallback",
            "params": [
                {
                    "name": "query",
                    "description": "La consulta previamente ejecutada",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                },
                {
                    "name": "error",
                    "description": "El error o mensaje de error",
                    "type": "Mixed"
                },
                {
                    "name": "result",
                    "description": "El resultado",
                    "type": "Mixed"
                }
            ],
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 135,
            "description": "Retorna los valores necesarios para armar una consulta parametrizada con \n<i>where</i>.",
            "itemtype": "method",
            "name": "getQueryFilters",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Objetos compuesto por <b>\"where\"</b> y <b>\"values\"</b> \ndonde <b>\"where\"</b> contiene la información del <i>string</i> que se \ndebe colocar en el lugar de los valores de filtro de la consulta y \n<b>\"values\"</b> contiene los valores a ser utilizados para la consulta\nparametrizada.",
                "type": "Object"
            },
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 158,
            "description": "Retorna los valores necesarios para armar una consulta parametrizada con \n<i>values</i> (ejemplo: ?, ?, ?).",
            "itemtype": "method",
            "name": "getQueryValues",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "strValues El <i>string</i> que se debe colocar en el \nlugar de los valores de la consulta",
                "type": "String"
            },
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 176,
            "description": "Retorna la instancia de SQLite3 utilizada",
            "itemtype": "method",
            "name": "getDB",
            "return": {
                "description": "db Instancia de SQLite3 utilizada",
                "type": "SQLite3"
            },
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 185,
            "description": "Imprime en consola un mensaje de error, si el atributo debug del objeto \nes <i>true</i>.",
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "message",
                    "description": "Mensaje de error",
                    "type": "String"
                }
            ],
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 197,
            "description": "Constructor de la clase",
            "itemtype": "method",
            "name": "__construct",
            "access": "private",
            "tagname": "",
            "class": "SQLite",
            "module": "Server",
            "submodule": "Server-libs"
        }
    ],
    "warnings": []
}