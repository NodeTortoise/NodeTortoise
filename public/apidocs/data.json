{
    "project": {
        "name": "NodeTortoise",
        "description": "Proyecto Universitario para basado en archivos Galapagos independientes, ejecutado sobre una plataforma NodeJS",
        "version": "1.0.0",
        "url": ""
    },
    "files": {
        "server\\bl\\App.js": {
            "name": "server\\bl\\App.js",
            "modules": {},
            "classes": {
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Controller.js": {
            "name": "server\\bl\\Controller.js",
            "modules": {},
            "classes": {
                "Controller": 1,
                "Controller.model": 1,
                "Controller.session": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Model.js": {
            "name": "server\\bl\\Model.js",
            "modules": {},
            "classes": {
                "Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\Session.js": {
            "name": "server\\bl\\Session.js",
            "modules": {},
            "classes": {
                "Session": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\bl\\SessionController.js": {
            "name": "server\\bl\\SessionController.js",
            "modules": {},
            "classes": {
                "SessionController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\Entities.js": {
            "name": "server\\da\\Entities.js",
            "modules": {},
            "classes": {
                "Entities": 1,
                "Entities.model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\Sockets.Actions.js": {
            "name": "server\\da\\Sockets.Actions.js",
            "modules": {},
            "classes": {
                "Sockets.Actions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\da\\Sockets.js": {
            "name": "server\\da\\Sockets.js",
            "modules": {},
            "classes": {
                "Sockets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server\\libs\\SQLite.js": {
            "name": "server\\libs\\SQLite.js",
            "modules": {},
            "classes": {
                "SQLite": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\App.js",
            "line": 3,
            "description": "Controlador principal de la aplicación en el lado del servidor. Se encarga de \nestablecer los parámetros de configuración, configurando el framework Express, \nlas rutas y el motor de plantillas (templates).",
            "is_constructor": 1
        },
        "Controller": {
            "name": "Controller",
            "shortname": "Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\Controller.js",
            "line": 36,
            "description": "Controla la capa negocio de la aplicación, haciendo la conexión entre la capa \nde datos y las vistas y aplicando la logica de negocio necesaria."
        },
        "Controller.model": {
            "name": "Controller.model",
            "shortname": "Controller.model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\Controller.js",
            "line": 59,
            "description": "Controla la capa de negocio que interactua con las acciones sobre los modelos."
        },
        "Controller.session": {
            "name": "Controller.session",
            "shortname": "Controller.session",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\Controller.js",
            "line": 188,
            "description": "Controla la capa de negocio que interactua con las sesiones de simulaciones."
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\Model.js",
            "line": 3,
            "description": "Controla las acciones que se pueden ejecutar sobre un modelo.",
            "is_constructor": 1
        },
        "Session": {
            "name": "Session",
            "shortname": "Session",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\Session.js",
            "line": 3,
            "description": "Maneja una sesión individual de una simulación.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ]
        },
        "SessionController": {
            "name": "SessionController",
            "shortname": "SessionController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\bl\\SessionController.js",
            "line": 3,
            "description": "Controla las sesiones de creadas por los usuarios para ejecutar las simulaciones.",
            "is_constructor": 1
        },
        "Entities": {
            "name": "Entities",
            "shortname": "Entities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\da\\Entities.js",
            "line": 9,
            "description": "Maneja la relación de las distintas entidades con la base de datos."
        },
        "Entities.model": {
            "name": "Entities.model",
            "shortname": "Entities.model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\da\\Entities.js",
            "line": 16,
            "description": "Maneja la relación de la entidad <i>model</i> con la base de datos."
        },
        "Sockets.Actions": {
            "name": "Sockets.Actions",
            "shortname": "Sockets.Actions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\da\\Sockets.Actions.js",
            "line": 6,
            "description": "Maneja las acciones a ejecutar entre las simulacione, cuya comunicación es \nvía web sockets."
        },
        "Sockets": {
            "name": "Sockets",
            "shortname": "Sockets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\da\\Sockets.js",
            "line": 3,
            "description": "Inicializa y configura los web sockets que se utilizan para el envío de la \ninformación en el ambiente de simulación de los modelos."
        },
        "SQLite": {
            "name": "SQLite",
            "shortname": "SQLite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server\\libs\\SQLite.js",
            "line": 3,
            "description": "Ejecuta acciones sobre una base de SQLite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "Ruta al archivo de sqlite",
                    "type": "String"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "server\\bl\\App.js",
            "line": 14,
            "description": "Inicializa el proceso de definición de los parámetros de configuración \nde la aplicación.",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "server",
                    "description": "",
                    "type": "http.Server"
                }
            ],
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 28,
            "description": "Establece los parámetros de configuración de Express y el motor de \nplantillas Swig y otros (logger, cookieParser, etc).",
            "itemtype": "method",
            "name": "setupConfig",
            "access": "private",
            "tagname": "",
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 68,
            "description": "Establece los parámetros de configuración de las rutas accesibles por \nmedio del protocolo HTTP.",
            "itemtype": "method",
            "name": "setupRoutes",
            "access": "private",
            "tagname": "",
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 108,
            "description": "Constructor de la clase.",
            "itemtype": "method",
            "name": "__construct",
            "access": "private",
            "tagname": "",
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 120,
            "description": "Returna la instancia de Express utilizada.",
            "itemtype": "method",
            "name": "getExpress",
            "return": {
                "description": "app Instancia de express",
                "type": "Express"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 133,
            "description": "Retorn la ruta desde el directorio raíz de la aplicación basado en la ruta \nrecibida.",
            "itemtype": "method",
            "name": "getRootPath",
            "static": 1,
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta a la raíz de la aplicación",
                "type": "String"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 146,
            "description": "Retorn la ruta desde el directorio de los archivos del servidor de la \naplicación basado en la ruta recibida.",
            "itemtype": "method",
            "name": "getPath",
            "static": 1,
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al directorio de los archivos del servidor de la aplicación",
                "type": "String"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 159,
            "description": "Incluye el cídigo de un archivo dentro de la aplicación.",
            "itemtype": "method",
            "name": "include",
            "static": 1,
            "params": [
                {
                    "name": "file",
                    "description": "Ruta relativa del archivo",
                    "type": "String"
                }
            ],
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 170,
            "description": "Realiza el require de cualquiera de los módulos ubicados dentro del directorio\nde los archivos del servidor de la aplicación.",
            "itemtype": "method",
            "name": "require",
            "static": 1,
            "params": [
                {
                    "name": "module",
                    "description": "Ruta relativa del modulo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El <i>requite</i> del modulo",
                "type": "Mixed"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 182,
            "description": "Imprime en consola un mensaje de depuración, personalizado para la aplicación.\nLa impresión del mensaje es condicionada por el valor de la variable global  \n<i>DEBUG_MODE<i> en el archivo de configuración de la aplicación y el valor del\nparámetro <i>mode</i> recibido",
            "itemtype": "method",
            "name": "debug",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "El mensaje a imprimir en consola",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "El usuario que está enviando el mensaje (cuando se está en modo simulación)",
                    "type": "String"
                },
                {
                    "name": "session",
                    "description": "La sesion del usuario que está enviando el mensaje (cuando se está en modo simulación)",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "El modo de debug a aplicar al mensaje",
                    "type": "String"
                }
            ],
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 207,
            "description": "Retorna la instancia del objeto Express utilizado",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "Instancia de express",
                "type": "Express"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\App.js",
            "line": 220,
            "description": "Determina si el usuario es master comparando con la contraseña enviada por \nparámetro con la contraseña del usuario maestro.",
            "itemtype": "method",
            "name": "isUserMaster",
            "static": 1,
            "params": [
                {
                    "name": "userPassword",
                    "description": "La contraseña del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El resultado de la comparación de las contraseñas",
                "type": "Boolean"
            },
            "class": "App"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 3,
            "description": "Establece un error de sistema",
            "itemtype": "method",
            "name": "responseOnErrorHTML",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                },
                {
                    "name": "status",
                    "description": "El status del error",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "500"
                }
            ],
            "class": "Controller"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 20,
            "description": "Establece un error de sistema para un servicio web",
            "itemtype": "method",
            "name": "responseOnErrorJson",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas.",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                },
                {
                    "name": "status",
                    "description": "El status del error",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "400"
                }
            ],
            "class": "Controller"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 44,
            "description": "Despliega una página genérica con un mensaje.",
            "itemtype": "method",
            "name": "message",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "title",
                    "description": "El titulo de la pagina",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "El mensaje",
                    "type": "String"
                }
            ],
            "class": "Controller"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 66,
            "description": "Controla la página de carga de modelos.",
            "itemtype": "method",
            "name": "upload",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución de búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 80,
            "description": "Controla la página de modelo subido exitosamente.",
            "itemtype": "method",
            "name": "upload.success",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución de búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 94,
            "description": "Controla la página de error al subir un modelo.",
            "itemtype": "method",
            "name": "upload.error",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 108,
            "description": "Controla la subida de un archivo de modelo.",
            "itemtype": "method",
            "name": "onUpload",
            "static": 1,
            "params": [
                {
                    "name": "originalFile",
                    "description": "Archivo original del modelo subido.",
                    "type": "String"
                },
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 124,
            "description": "Controla la página de listado de modelos.",
            "itemtype": "method",
            "name": "list",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 133,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onSuccess",
            "params": [
                {
                    "name": "modelsList",
                    "description": "Listado de modelos",
                    "type": "Array"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 144,
            "description": "Función que ejecuta después si hay un error al obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 156,
            "description": "Controla el borrado de un modelo.",
            "itemtype": "method",
            "name": "delete",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 165,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "delete.onSuccess",
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 172,
            "description": "Función que ejecuta después si hay un error al eliminar el modelo.",
            "itemtype": "event",
            "name": "delete.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.model"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 195,
            "description": "Controla la página de listado de sesiones de simulación.",
            "itemtype": "method",
            "name": "list",
            "static": 1,
            "params": [
                {
                    "name": "req",
                    "description": "Objeto que representa la petición HTTP y contiene el <i>query string</i>, los parámetros, el cuerpo y las cabeceras HTTP, entro otros",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "El objeto res representa la respuesta HTTP que una aplicación Express envía cuando se hace una petición HTTP.",
                    "type": "Response"
                },
                {
                    "name": "next",
                    "description": "Función que continúa la ejecución en la búsqueda de rutas",
                    "type": "Function"
                }
            ],
            "class": "Controller.session"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 204,
            "description": "Función que ejecuta después de obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.afterGetModelsList",
            "params": [
                {
                    "name": "modelsList",
                    "description": "La lista de modelos",
                    "type": "Array"
                }
            ],
            "class": "Controller.session"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 222,
            "description": "Función para obtener la URL a un modelo.",
            "itemtype": "event",
            "name": "list.getModelURL",
            "params": [
                {
                    "name": "modelFilename",
                    "description": "El nombre de archivo del modelo sin extensión",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La URL al modelo",
                "type": "String"
            },
            "class": "Controller.session"
        },
        {
            "file": "server\\bl\\Controller.js",
            "line": 236,
            "description": "Función que ejecuta después si hay un error al obtener la lista de modelos.",
            "itemtype": "event",
            "name": "list.onError",
            "params": [
                {
                    "name": "error",
                    "description": "El mensaje de error",
                    "type": "String"
                }
            ],
            "class": "Controller.session"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 12,
            "description": "Agregar un modelo al sistema.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "originalFile",
                    "description": "Ruta al archivo original subido",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Texto descriptivo del modelo",
                    "type": "String"
                }
            ],
            "return": {
                "description": "success Resultado de la adición del modelo.",
                "type": "Boolean"
            },
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 42,
            "description": "Elimina un modelo del sistema",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "idModel",
                    "description": "El ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "filename",
                    "description": "Nombre de archivo del modelo (sin la ruta)",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el modelo sea eliminado correctamente del sistema",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función e ejecutar si hay un error al eliminar un modelo del sistema",
                    "type": "Function"
                }
            ],
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 51,
            "description": "Función a ejecutar cuando el modelo sea eliminado correctamente de la base de datos",
            "itemtype": "method",
            "name": "afterDeleteFromDB",
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 66,
            "description": "Retorna la lista de modelos disponibles en el sistema",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se ha recuperado la lista de modelos del sistema",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función e ejecutar si hay un error al recuperar la lista de modelos del sistema",
                    "type": "Function"
                }
            ],
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 76,
            "description": "Retorna la ruta al archivo HTML de un modelo.",
            "itemtype": "method",
            "name": "getHTMLFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fileName",
                    "description": "Nombre del archivo de modelo a recuperar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al archivo HTML de un modelo",
                "type": "String"
            },
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 87,
            "description": "Retorna la ruta al archivo JavaScript de un modelo.",
            "itemtype": "method",
            "name": "getJSFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fileName",
                    "description": "Nombre del archivo de modelo a recuperar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La ruta al archivo JavaScript de un modelo",
                "type": "String"
            },
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 98,
            "description": "Intenta eliminar un archivo del sistema de archivo, si falla, envía un mensaje de depuración a la aplicación.",
            "itemtype": "method",
            "name": "tryDeleteFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "filePath",
                    "description": "Ruta del archivo",
                    "type": "String"
                },
                {
                    "name": "fileStrID",
                    "description": "Identificador del archivo a ser mostrado en el mensaje de depuración.",
                    "type": "String"
                },
                {
                    "name": "fs",
                    "description": "Objeto que controla el sistema de archivos",
                    "type": "Fs"
                }
            ],
            "return": {
                "description": "Resultado de eliminar el archivo",
                "type": "Boolean"
            },
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 119,
            "description": "Procese un modelo exportado de Galapagos, para convertirlo al formato necesario para que funcione en NodeTortoise.",
            "itemtype": "method",
            "name": "parse",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "originalFilePath",
                    "description": "Ruta del archivo original, subido al sistema",
                    "type": "String"
                },
                {
                    "name": "htmlNewFilePath",
                    "description": "Ruta donde se debe guardar el archivo HTML del modelo",
                    "type": "String"
                },
                {
                    "name": "jsNewFilePath",
                    "description": "Ruta donde se debe guardar el archivo JavaScript del modelo",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Nombre del archivo del modelo",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "fs",
                    "description": "Objeto que controla el sistema de archivos",
                    "type": "Fs"
                }
            ],
            "class": "Model"
        },
        {
            "file": "server\\bl\\Model.js",
            "line": 159,
            "description": "Basado en el patrón <i>Singleton</i>, returna una instancia del objeto Model",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "La instancia de Model",
                "type": "Model"
            },
            "class": "Model"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 18,
            "description": "Realiza el proceso de inicialización de variables necesarias por el objeto.",
            "itemtype": "method",
            "name": "init",
            "class": "Session"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 26,
            "description": "Agrega un usuario a la sesión.",
            "itemtype": "method",
            "name": "addUser",
            "params": [
                {
                    "name": "username",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "masterPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "enabledControls",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Un objecto JavaScript estandar con la información sobre la sesión.",
                "type": "Object"
            },
            "class": "Session"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 57,
            "description": "Elimina un usuario de una sesión de simulación.",
            "itemtype": "method",
            "name": "removeUser",
            "params": [
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "El token de sesión del usuario",
                    "type": "String"
                }
            ],
            "class": "Session"
        },
        {
            "file": "server\\bl\\Session.js",
            "line": 74,
            "description": "Retorna el token del usuario maestro.",
            "itemtype": "method",
            "name": "getMasterToken",
            "return": {
                "description": "El token del usuario maestro",
                "type": "String"
            },
            "class": "Session"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 14,
            "description": "Realiza el proceso de inicialización de variables necesarias por el objeto.",
            "itemtype": "method",
            "name": "init",
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 23,
            "description": "Añade un usuario a una sesión de simulación. Si la sessión no existe, crea una nueva.",
            "itemtype": "method",
            "name": "joinSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "modelFile",
                    "description": "El archivo del modelo de la simulación que ejecutará la sesión",
                    "type": "String"
                },
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "enabledControls",
                    "description": "Determinar si la sesión habilita o no los controles a otros usuarios distintos del maestro. Parámetro obligatorio solo para el usuario maestro.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Un objecto JavaScript estandar con la información sobre la sesión.",
                "type": "Object"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 43,
            "description": "Elimina un usuario de una sesión de simulación.",
            "itemtype": "method",
            "name": "leaveSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "userName",
                    "description": "El nombre del usuario",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "El token de sesión del usuario",
                    "type": "String"
                }
            ],
            "return": {
                "description": "diedSession Indica si la sesión murió, porque el que abandonó fue el usuario maestro."
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 64,
            "description": "Establece el modelo a ejecutar en una sesión de simulación",
            "itemtype": "method",
            "name": "setSessionModel",
            "params": [
                {
                    "name": "sessionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "modelName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 74,
            "description": "Devuelve el modelo que se está utilizando en una sesión.",
            "itemtype": "method",
            "name": "getSessionModel",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "El nombre del modelo utilizado en la sesión",
                "type": "String"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 84,
            "description": "Retorna la lista de las sesiones de simulación activas.",
            "itemtype": "method",
            "name": "getSessionList",
            "return": {
                "description": "La lista de sesiones",
                "type": "Array"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 93,
            "description": "Retorna una sesión, basado en el nombre recibido como parámetro.",
            "itemtype": "method",
            "name": "getSession",
            "params": [
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La sessión",
                "type": "Session"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 103,
            "description": "Retorna la cantidad de usuarios en una sesión, basado en el nombre recibido como parámetro.",
            "itemtype": "method",
            "name": "getSessionUsersQuantity",
            "params": [
                {
                    "name": "sessionName",
                    "description": "El nombre de la sesión",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La cantidad de usuarios en la sesión",
                "type": "Integer"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 117,
            "description": "Constructor de la clase",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "__construct",
            "class": "SessionController"
        },
        {
            "file": "server\\bl\\SessionController.js",
            "line": 130,
            "description": "Basado en el patrón <i>Singleton</i>, returna una instancia del objeto SessionController",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "return": {
                "description": "",
                "type": "SessionController"
            },
            "class": "SessionController"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 24,
            "description": "Inserta un modelo en base de datos.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "Nombre del modelo",
                    "type": "String"
                },
                {
                    "name": "filename",
                    "description": "Nombre del archivo del modelo sin extensión",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Descripción del modelo",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Entities.model"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 37,
            "description": "Obtiene la lista de modelos en base de datos.",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se obtiene la lista de modelos",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "class": "Entities.model"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 47,
            "description": "Elimina un modelo de base de datos.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "idModel",
                    "description": "ID del modelo",
                    "type": "Integer"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando se elimina el modelo",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Function"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Entities.model"
        },
        {
            "file": "server\\da\\Entities.js",
            "line": 63,
            "description": "Basado en el patrón <i>Singleton</i>, returna una instancia del objeto Entities.model",
            "itemtype": "method",
            "name": "getInstance",
            "return": {
                "description": "",
                "type": "Entities.model"
            },
            "class": "Entities.model"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 14,
            "description": "Conecta una nueva instancia a una sesión de simulacón",
            "itemtype": "method",
            "name": "connect",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 39,
            "description": "Desconecta al dueño dle socket actual de una sesión.",
            "itemtype": "method",
            "name": "disconnect",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 59,
            "description": "Envía un mensaje de <b>Ejecutar Comando</b>, para que los \nclientes ejecuten un comando, basado en los parámetros enviados.",
            "itemtype": "method",
            "name": "executeCommand",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 71,
            "description": "Envía un mensaje de <b>Establecer valor de variable global</b>, para que los \nclientes establezcan un nuevo valor de variable global, basado en los \nparámetros enviados.",
            "itemtype": "method",
            "name": "setGlobal",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 89,
            "description": "Envía un mensaje de <b>Actualizar Velocidad</b>, para que los clientes \nejecuten una actualización de la velocidad de la  simulación, \nbasado en los parámetros enviados.",
            "itemtype": "method",
            "name": "updateSpeed",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 107,
            "description": "Envía un mensaje de <b>Aplicar actualización</b>, para que los clientes \nejecuten una actualización de la simulación, basado en los parámetros enviados.",
            "itemtype": "method",
            "name": "applyUpdate",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "token",
                    "description": "Token del usuario",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.Actions.js",
            "line": 119,
            "description": "Envía un mensaje de <b>Enviar Mensaje</b>",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets.Actions"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 11,
            "description": "Instancia de sockets.io",
            "itemtype": "attribute",
            "name": "io",
            "type": "{sockets.io}",
            "static": 1,
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 19,
            "description": "Envía a los demás la indicación de que se ejecute una acción.",
            "itemtype": "method",
            "name": "sendAction",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión de simulación a la cual se va a enviar el mensaje",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 38,
            "description": "Alias de Sockets.setServerActions",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 47,
            "description": "Configura las acciones que se pueden ejecutar sobre el socket actual",
            "itemtype": "method",
            "name": "setServerActions",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 68,
            "description": "Envía un mensaje al dueño del socket actual",
            "itemtype": "method",
            "name": "sendToMe",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 81,
            "description": "Envía un mensaje de acción a los otros usuarios dentro de la sesión del dueño del socket actual.",
            "itemtype": "method",
            "name": "sendToOthers",
            "static": 1,
            "params": [
                {
                    "name": "socket",
                    "description": "El web socket para la instancia actual",
                    "type": "Socket"
                },
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 95,
            "description": "Envía un mensaje de acción a todos los usuarios dentro la sesión del dueño del socket actual.",
            "itemtype": "method",
            "name": "sendToAll",
            "static": 1,
            "params": [
                {
                    "name": "sessionName",
                    "description": "Nombre de la sesión",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Acción a ejecutar",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parámetros de la acción",
                    "type": "Object"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\da\\Sockets.js",
            "line": 108,
            "description": "Configura la funcionalidad de los Sockets",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "params": [
                {
                    "name": "server",
                    "description": "Instancia del servidot HTTP",
                    "type": "http.Server"
                }
            ],
            "class": "Sockets"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 15,
            "description": "Description",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "fields",
                    "description": "Las columnas a insertar",
                    "type": "String"
                },
                {
                    "name": "values",
                    "description": "Los valores a insertar",
                    "type": "Array"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 41,
            "description": "Selecciona todos los registros de una tabla.",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "String ",
                    "description": "fields Las columnas a seleccionar",
                    "optional": true,
                    "optdefault": " '*'"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 63,
            "description": "Elimina uno o más registros de una tabla.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "table",
                    "description": "La tabla sobre la cuál se ejecutará la acción",
                    "type": "String"
                },
                {
                    "name": "filters",
                    "description": "Los filtros de la consulta (<i>where</i>)",
                    "type": "Array"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 89,
            "description": "Ejecuta el <i>callback</i> indicado después de realizar una tarea de base \nde datos, ya sea este de procesos exitoso o de error.",
            "itemtype": "method",
            "name": "onCallback",
            "params": [
                {
                    "name": "query",
                    "description": "La consulta previamente ejecutada",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "Función a ejecutar cuando el proceso en base de datos se completa exitosamente",
                    "type": "Function"
                },
                {
                    "name": "onError",
                    "description": "Función a ejecutar en caso de error",
                    "type": "Funtion"
                },
                {
                    "name": "error",
                    "description": "El error o mensaje de error",
                    "type": "Mixed"
                },
                {
                    "name": "result",
                    "description": "El resultado",
                    "type": "Mixed"
                }
            ],
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 109,
            "description": "Retorna los valores necesarios para armar una consulta parametrizada con \n<i>where</i>.",
            "itemtype": "method",
            "name": "getQueryFilters",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Objetos compuesto por <b>\"where\"</b> y <b>\"values\"</b> \ndonde <b>\"where\"</b> contiene la información del <i>string</i> que se \ndebe colocar en el lugar de los valores de filtro de la consulta y \n<b>\"values\"</b> contiene los valores a ser utilizados para la consulta\nparametrizada.",
                "type": "Object"
            },
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 132,
            "description": "Retorna los valores necesarios para armar una consulta parametrizada con \n<i>values</i> (ejemplo: ?, ?, ?).",
            "itemtype": "method",
            "name": "getQueryValues",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "strValues El <i>string</i> que se debe colocar en el \nlugar de los valores de la consulta",
                "type": "String"
            },
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 150,
            "description": "Retorna la instancia de SQLite3 utilizada",
            "itemtype": "method",
            "name": "getDB",
            "return": {
                "description": "db Instancia de SQLite3 utilizada",
                "type": "SQLite3"
            },
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 159,
            "description": "Imprime en consola un mensaje de error, si el atributo debug del objeto \nes <i>true</i>.",
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "message",
                    "description": "Mensaje de error",
                    "type": "String"
                }
            ],
            "class": "SQLite"
        },
        {
            "file": "server\\libs\\SQLite.js",
            "line": 171,
            "description": "Constructor de la clase",
            "itemtype": "method",
            "name": "__construct",
            "access": "private",
            "tagname": "",
            "class": "SQLite"
        }
    ],
    "warnings": []
}